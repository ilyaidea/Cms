<?php

namespace Modules\System\Native\Forms;

use Lib\Forms\Element\Check;
use Lib\Forms\Element\Text;
use Lib\Forms\Form;
use Modules\System\Native\Models\Language;
use Phalcon\Forms\Element\Select;
use Phalcon\Forms\Element\Submit;
use Phalcon\Forms\Element\TextArea;
use Phalcon\Validation\Validator\InclusionIn;
use Phalcon\Validation\Validator\Numericality;
use Phalcon\Validation\Validator\PresenceOf;
use Phalcon\Validation\Validator\StringLength;

class TranslateForm extends Form
{
    public function initialize( $entity = null, $options = [] )
    {
        parent::initialize( $entity, $options ); // TODO: Change the autogenerated stub
    }

    public function initElements()
    {
        parent::initElements();

        $this->phrase      = new Text( 'phrase' );
        $this->translation = new TextArea( 'translation' );
        $this->saveBtn     = new Submit( 'save' );
    }

    public function setAttributesElements()
    {
        parent::setAttributesElements();

        $this->phrase->setAttributes( [
            'placeholder' => 'Please enter the phrase'
        ] );

        $this->translation->setAttributes( [
            'placeholder' => 'Please enter the translation'
        ] );
    }

    public function setDefaultElements()
    {
        parent::setDefaultElements();
    }

    public function setOptionsElements()
    {
        parent::setOptionsElements();
    }

    public function setUserOptionsElements()
    {
        parent::setUserOptionsElements();

        $this->phrase->setUserOptions( [
            'note' => 'For example: hi_name'
        ] );

        $this->translation->setUserOptions( [
            'note' => "For example: Hi %name%"
        ] );

    }

    public function setLabelElements()
    {
        parent::setLabelElements();

        $this->phrase->setLabel( 'Phrase' );
        $this->translation->setLabel( 'Translation' );
        $this->saveBtn->setLabel( 'Save' );
    }

    public function validationElements()
    {
        parent::validationElements();

        $this->phrase->addValidators( [
            new PresenceOf( [
                'message' => 'The :field is required'
            ] )
        ] );

//        $this->translation->addValidators( [
//            new PresenceOf( [
//                'message' => 'The :field is required'
//            ] )
//        ] );
    }

    public function addElements()
    {
        parent::addElements();

        $this->add( $this->phrase );
        $this->add( $this->translation );
        $this->add( $this->saveBtn );
    }

    /*
     * Elements
     */
    /**
     * @var Text $phrase
     */
    private $phrase;
    /**
     * @var TextArea $translation
     */
    private $translation;
    /**
     * @var Submit $saveBtn
     */
    private $saveBtn;
}