<?php
/**
 * Summary File Form
 *
 * Description File Form
 *
 * ILYA CMS Created by ILYA-IDEA Company.
 * @author Ali Mansoori
 * Date: 8/12/2018
 * Time: 1:50 PM
 * @version 1.0.0
 * @copyright Copyright (c) 2017-2018, ILYA-IDEA Company
 */
namespace Lib\Forms;

use Lib\Common\TraitSecurity;
use Lib\Forms\Element\File;
use Lib\Forms\Element\FileUploader;
use Lib\Forms\Element\Hidden;
use Phalcon\Forms\Element\Text;
use Phalcon\Validation\Message;
use Phalcon\Validation\Validator\Identical;

class Form extends \Phalcon\Forms\Form
{
    use TraitPropertiesForm;
    use TraitSecurity;

    /** @var Information $formInfo */
    public $formInfo;
    /** @var Validate $validate */
    public $validate;
    /** @var Design $design */
    public $design;
    /** @var Elements $elements */
    public $elements;

    public $prefix;

    private $entity = null;
    private $userOptions = null;

    protected $edit_mode = false;
    
    public function initialize( $entity = null, $userOptions = null )
    {
        $this->entity = $entity;
        $this->userOptions = $userOptions;

        $this->securityElems();
        $this->formInfo = new Information($this);
        $this->design   = new Design($this);
//        $this->validate = new Validate($this);
        $this->elements = new Elements($this);

        if(isset($this->userOptions['edit']) && $this->userOptions['edit'] === true)
        {
            $this->edit_mode = true;
        }

    }

    public function process()
    {

    }

    public function isValid( $data = null, $entity = null )
    {
        if($this->request->isPost() &&
            $this->request->getPost('action') !== null)
        {
            if($this->security->checkHash(get_class($this), $this->request->getPost('action')))
            {
                if(parent::isValid( $this->request->getPost(), $entity ))
                {
                    return true;
                }
            }
        }
        return false;
    }

    public function allowToUpload($isAllow)
    {
        if($isAllow === true)
        {
            $this->formInfo->appendTag('enctype', 'multipart/form-data');
        }
        return $this;
    }

    public function add( \Phalcon\Forms\ElementInterface $element, $position = null, $type = null )
    {
        if($element instanceof FileUploader)
        {
            $element->process($this);
        }
        parent::add( $element, $position, $type ); // TODO: Change the autogenerated stub
    }

    private function securityElems()
    {
        $actionCode = $this->security->hash(get_class($this));
        $action = new Hidden(
            'action',
            [
                'value' => $actionCode
            ]
        );
        $action->clear();
        $this->add($action);

        $csrf = new Hidden('csrf', [
            'value' => $this->getToken()
        ]);
        $csrf->addValidator(
            new Identical(
                [
                    'value' => $this->security->getSessionToken(),
                    'message' => ':field validation failed'
                ]
            )
        );
        $csrf->clear();
        $this->add($csrf);
    }

    /**
     * @param FileUploader $fileUpload
     * @return string
     */
    public function uploadAction( $fileUpload )
    {
        return $this->security->hash(get_class($fileUpload). $fileUpload->getName());
    }

    /**
     * @param FileUploader $fileUpload
     * @return bool
     */
    public function isValidUpload( $fileUpload )
    {
        if($this->request->get('upload_action') || $this->request->getPut('upload_action'))
        {
            $upload_action = $this->request->get('upload_action') ? $this->request->get('upload_action') : $this->request->getPut('upload_action');

            if($this->security->checkHash(get_class($fileUpload). $fileUpload->getName(), $upload_action))
            {
                return true;
            }
        }
        return false;
    }

}